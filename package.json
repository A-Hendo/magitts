{
  "name": "magit",
  "displayName": "Magit (alpha)",
  "description": "Magit for Visual Studio Code",
  "publisher": "kahole",
  "author": {
    "name": "Kristian Andersen Hole"
  },
  "version": "0.0.7",
  "engines": {
    "vscode": "^1.42.1"
  },
  "icon": "images/magit_logo.png",
  "galleryBanner": {
    "color": "#000000",
    "theme": "dark"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "magit",
    "git",
    "emacs",
    "commit"
  ],
  "license": "MIT",
  "homepage": "https://github.com/kahole/vscode-magit/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/kahole/vscode-magit.git"
  },
  "bugs": {
    "url": "https://github.com/kahole/vscode-magit/issues"
  },
  "activationEvents": [
    "onCommand:magit.status",
    "onCommand:magit.dispatch",
    "onCommand:magit.file-popup"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "magit.status",
        "title": "Magit Status"
      },
      {
        "command": "magit.toggle-fold",
        "title": "Magit Toggle Fold"
      },
      {
        "command": "magit.dispatch",
        "title": "Magit Dispatch"
      },
      {
        "command": "magit.file-popup",
        "title": "Magit File Popup"
      },
      {
        "command": "magit.visit-at-point",
        "title": "Magit Visit-at-point"
      },
      {
        "command": "magit.apply-at-point",
        "title": "Magit Apply-at-point"
      },
      {
        "command": "magit.discard-at-point",
        "title": "Magit Discard-at-point"
      },
      {
        "command": "magit.commit",
        "title": "Magit Commit"
      },
      {
        "command": "magit.branching",
        "title": "Magit Branching"
      },
      {
        "command": "magit.merging",
        "title": "Magit Merging"
      },
      {
        "command": "magit.rebasing",
        "title": "Magit Rebasing"
      },
      {
        "command": "magit.resetting",
        "title": "Magit Resetting"
      },
      {
        "command": "magit.pushing",
        "title": "Magit Pushing"
      },
      {
        "command": "magit.pulling",
        "title": "Magit Pulling"
      },
      {
        "command": "magit.remoting",
        "title": "Magit Remoting"
      },
      {
        "command": "magit.logging",
        "title": "Magit Logging"
      },
      {
        "command": "magit.show-refs",
        "title": "Magit Show Refs"
      },
      {
        "command": "magit.diffing",
        "title": "Magit Diffing"
      },
      {
        "command": "magit.tagging",
        "title": "Magit Tagging"
      },
      {
        "command": "magit.worktree",
        "title": "Magit Worktree"
      },
      {
        "command": "magit.stage",
        "title": "Magit Stage"
      },
      {
        "command": "magit.stage-all",
        "title": "Magit Stage All"
      },
      {
        "command": "magit.unstage",
        "title": "Magit Unstage"
      },
      {
        "command": "magit.unstage-all",
        "title": "Magit Unstage All"
      },
      {
        "command": "magit.help",
        "title": "Magit Help"
      },
      {
        "command": "magit.stashing",
        "title": "Magit Stashing"
      },
      {
        "command": "magit.fetching",
        "title": "Magit Fetching"
      },
      {
        "command": "magit.process-log",
        "title": "Magit Process Log"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "magit.help",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.branching",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.merging",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.rebasing",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.resetting",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.remoting",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.logging",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.show-refs",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.diffing",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.tagging",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.worktree",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.visit-at-point",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.apply-at-point",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.discard-at-point",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.stage",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.stage-all",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.unstage",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.unstage-all",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.commit",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.pushing",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.pulling",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.stashing",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.fetching",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.process-log",
          "when": "editorLangId == magit"
        }
      ]
    },
    "languages": [
      {
        "id": "magit",
        "aliases": [
          "Magit"
        ],
        "extensions": [
          ".magit"
        ],
        "configuration": "./languages/magit.language-configuration.json"
      }
    ],
    "configurationDefaults": {
      "[magit]": {
        "editor.lineNumbers": "off",
        "editor.lineHeight": 15
      }
    },
    "grammars": [
      {
        "language": "magit",
        "scopeName": "source.magit",
        "path": "./syntaxes/magit.tmGrammar.json"
      }
    ],
    "keybindings": [
      {
        "command": "magit.status",
        "key": "ctrl+x g",
        "when": "editorTextFocus"
      },
      {
        "command": "magit.dispatch",
        "key": "ctrl+x alt+g",
        "when": "editorTextFocus"
      },
      {
        "command": "magit.file-popup",
        "key": "ctrl-x ctrl+g",
        "when": "editorTextFocus"
      },
      {
        "command": "magit.toggle-fold",
        "key": "tab",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.refresh",
        "key": "g",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.help",
        "key": "shift+/",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.visit-at-point",
        "key": "enter",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.apply-at-point",
        "key": "a",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.discard-at-point",
        "key": "k",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.commit",
        "key": "c",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.branching",
        "key": "b",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.merging",
        "key": "m",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.rebasing",
        "key": "r",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.resetting",
        "key": "shift-x",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.remoting",
        "key": "shift+m",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.logging",
        "key": "l",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.show-refs",
        "key": "y",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.diffing",
        "key": "d",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.tagging",
        "key": "t",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.worktree",
        "key": "shift+5",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.pushing",
        "key": "shift+p",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.pulling",
        "key": "shift+f",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.stashing",
        "key": "z",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.fetching",
        "key": "f",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.stage",
        "key": "s",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.stage-all",
        "key": "shift+s",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.unstage",
        "key": "u",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.unstage-all",
        "key": "shift+u",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.process-log",
        "key": "shift+4",
        "when": "editorTextFocus && editorLangId == magit"
      },
      {
        "command": "magit.save-and-close-commit-msg",
        "key": "ctrl+c ctrl+c",
        "when": "editorTextFocus && editorLangId == git-commit"
      },
      {
        "command": "magit.abort-commit-msg",
        "key": "ctrl+c ctrl+k",
        "when": "editorTextFocus && editorLangId == git-commit"
      },
      {
        "command": "workbench.action.closeActiveEditor",
        "key": "q",
        "when": "editorTextFocus && editorLangId == magit"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc --forceConsistentCasingInFileNames -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.40.0",
    "glob": "^7.1.5",
    "mocha": "^6.2.2",
    "typescript": "^3.7.3",
    "tslint": "^5.20.1",
    "vscode-test": "^1.2.2"
  }
}
